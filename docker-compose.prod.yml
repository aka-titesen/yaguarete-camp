version: "3.8"

services:
  # Aplicación CodeIgniter 4 - Producción
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: yagaruete_camp_app_prod
    restart: unless-stopped
    environment:
      - CI_ENVIRONMENT=production
    networks:
      - app-network
    depends_on:
      - db
      - redis

  # Servidor web Apache - Producción
  apache:
    build:
      context: .
      dockerfile: docker/apache/Dockerfile
    container_name: yagaruete_camp_apache_prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/apache/apache.conf:/usr/local/apache2/conf/httpd.conf
      - ./docker/apache/vhosts.conf:/usr/local/apache2/conf/extra/httpd-vhosts.conf
      - static_files:/var/www/html/public
    networks:
      - app-network
    depends_on:
      - app

  # Base de datos MySQL - Producción
  db:
    image: mysql:8.0
    container_name: yagaruete_camp_mysql_prod
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-bd_yagaruete_camp}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dbdata_prod:/var/lib/mysql
      - ./docker/mysql/prod.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - app-network
    # NO exponer puerto 3306 en producción por seguridad

  # Cache Redis - Producción
  redis:
    image: redis:7.2-alpine
    container_name: yagaruete_camp_redis_prod
    restart: unless-stopped
    volumes:
      - redisdata_prod:/data
      - ./docker/redis/redis-prod.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - app-network

# Volumes persistentes para producción
volumes:
  dbdata_prod:
    driver: local
  redisdata_prod:
    driver: local
  static_files:
    driver: local

# Red interna
networks:
  app-network:
    driver: bridge
