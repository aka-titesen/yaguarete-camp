// ===================================================================
// YAGUARETÉ CAMP - MIXINS AVANZADOS
// ===================================================================
// Mixins para efectos, animaciones y componentes reutilizables

@import "variables";

// ===================================================================
// 1. MIXINS DE SOMBRAS Y EFECTOS
// ===================================================================

// 1.1 Sombra personalizable
@mixin shadow($level: "md") {
  @if $level == "xs" {
    box-shadow: $shadow-xs;
  } @else if $level == "sm" {
    box-shadow: $shadow-sm;
  } @else if $level == "md" {
    box-shadow: $shadow-md;
  } @else if $level == "lg" {
    box-shadow: $shadow-lg;
  } @else if $level == "xl" {
    box-shadow: $shadow-xl;
  } @else if $level == "2xl" {
    box-shadow: $shadow-2xl;
  }
}

// 1.2 Sombra coloreada
@mixin colored-shadow($color: $primary, $intensity: 0.39) {
  box-shadow: 0 4px 14px 0 rgba($color, $intensity);
}

// 1.3 Glass Morphism Effect
@mixin glass-morphism($alpha: 0.08) {
  background: rgba(255, 255, 255, $alpha);
  border: 1px solid $glass-border;
  box-shadow: $glass-shadow;
  backdrop-filter: $glass-backdrop-filter;
  -webkit-backdrop-filter: $glass-backdrop-filter;
}

// ===================================================================
// 2. MIXINS DE GRADIENTES
// ===================================================================

// 2.1 Gradiente personalizable
@mixin gradient($direction: 135deg, $color1: $primary, $color2: $secondary) {
  background: linear-gradient($direction, $color1 0%, $color2 100%);
}

// 2.2 Gradiente de texto
@mixin gradient-text($gradient: $gradient-primary) {
  background: $gradient;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  text-fill-color: transparent;
}

// 2.3 Overlay con gradiente
@mixin gradient-overlay($gradient: $gradient-hero, $opacity: 0.8) {
  position: relative;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: $gradient;
    opacity: $opacity;
    z-index: 1;
  }

  > * {
    position: relative;
    z-index: 2;
  }
}

// ===================================================================
// 3. MIXINS DE ANIMACIONES
// ===================================================================

// 3.1 Transición suave
@mixin smooth-transition(
  $property: all,
  $duration: $transition-normal,
  $easing: ease
) {
  transition: $property $duration $easing;
}

// 3.2 Hover con elevación
@mixin hover-lift($lift: 4px, $shadow: $shadow-lg) {
  @include smooth-transition(transform, $transition-fast);

  &:hover {
    transform: translateY(-#{$lift});
    box-shadow: $shadow;
  }
}

// 3.3 Pulse animation
@mixin pulse($color: $primary, $scale: 1.05) {
  animation: pulse 2s infinite;

  @keyframes pulse {
    0% {
      transform: scale(1);
      box-shadow: 0 0 0 0 rgba($color, 0.7);
    }

    70% {
      transform: scale($scale);
      box-shadow: 0 0 0 10px rgba($color, 0);
    }

    100% {
      transform: scale(1);
      box-shadow: 0 0 0 0 rgba($color, 0);
    }
  }
}

// 3.4 Shimmer para skeleton loading
@mixin shimmer($base-color: $neutral-200, $highlight-color: $neutral-100) {
  background: linear-gradient(
    90deg,
    $base-color 25%,
    $highlight-color 50%,
    $base-color 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;

  @keyframes shimmer {
    0% {
      background-position: -200% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }
}

// 3.5 Fade in animation
@mixin fade-in($duration: $transition-normal, $delay: 0s) {
  opacity: 0;
  animation: fadeIn $duration ease $delay forwards;

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

// ===================================================================
// 4. MIXINS DE LAYOUT Y RESPONSIVE
// ===================================================================

// 4.1 Flexbox center
@mixin flex-center($direction: row) {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: $direction;
}

// 4.2 Grid responsive
@mixin grid-responsive($min-width: 250px, $gap: $spacing-lg) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
}

// 4.3 Aspect ratio
@mixin aspect-ratio($width: 16, $height: 9) {
  position: relative;

  &::before {
    content: "";
    display: block;
    padding-top: ($height / $width) * 100%;
  }

  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// 4.4 Responsive breakpoints
@mixin mobile-only {
  @media (max-width: #{$breakpoint-sm - 1px}) {
    @content;
  }
}

@mixin tablet-up {
  @media (min-width: $breakpoint-sm) {
    @content;
  }
}

@mixin desktop-up {
  @media (min-width: $breakpoint-lg) {
    @content;
  }
}

@mixin large-desktop-up {
  @media (min-width: $breakpoint-xl) {
    @content;
  }
}

// ===================================================================
// 5. MIXINS DE COMPONENTES
// ===================================================================

// 5.1 Button base styles
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-sm $spacing-lg;
  border: none;
  border-radius: $radius-md;
  font-weight: 600;
  text-decoration: none;
  cursor: pointer;
  @include smooth-transition();

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
}

// 5.2 Button variant
@mixin button-variant(
  $bg-color: $primary,
  $text-color: white,
  $hover-color: null
) {
  @if $hover-color == null {
    $hover-color: darken($bg-color, 10%);
  }

  background-color: $bg-color;
  color: $text-color;

  &:hover:not(:disabled) {
    background-color: $hover-color;
    transform: translateY(-1px);
    @include colored-shadow($bg-color);
  }

  &:active {
    transform: translateY(0);
  }
}

// 5.3 Card component
@mixin card($padding: $spacing-lg, $radius: $radius-lg, $shadow: $shadow-md) {
  background: $surface-primary;
  border-radius: $radius;
  padding: $padding;
  box-shadow: $shadow;
  @include smooth-transition();

  &:hover {
    box-shadow: $shadow-lg;
    transform: translateY(-2px);
  }
}

// 5.4 Input field
@mixin input-field {
  width: 100%;
  padding: $spacing-sm $spacing-md;
  border: 2px solid $border-light;
  border-radius: $radius-md;
  font-size: 1rem;
  @include smooth-transition(border-color);

  &:focus {
    outline: none;
    border-color: $primary;
    box-shadow: 0 0 0 3px rgba($primary, 0.1);
  }

  &::placeholder {
    color: $text-muted;
  }
}

// 5.5 Skeleton loading
@mixin skeleton($height: 1rem, $radius: $radius-sm) {
  height: $height;
  border-radius: $radius;
  @include shimmer();
}

// ===================================================================
// 6. MIXINS DE UTILIDADES
// ===================================================================

// 6.1 Truncate text
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 6.2 Line clamp
@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// 6.3 Visually hidden
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// 6.4 Focus outline
@mixin focus-outline($color: $primary, $width: 2px, $offset: 2px) {
  outline: $width solid $color;
  outline-offset: $offset;
}

// 6.5 Reset list
@mixin reset-list {
  list-style: none;
  padding: 0;
  margin: 0;
}
