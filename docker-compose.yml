version: "3.8"

services:
  # Aplicación CodeIgniter 4
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: yagaruete_camp_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - PHP_IDE_CONFIG=serverName=docker
    networks:
      - app-network
    depends_on:
      - db
      - redis

  # Servidor web Nginx
  nginx:
    image: nginx:alpine
    container_name: yagaruete_camp_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    networks:
      - app-network
    depends_on:
      - app

  # Base de datos MySQL
  db:
    image: mysql:8.0
    container_name: yagaruete_camp_mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-bd_yagaruete_camp}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_USER: ${DB_USERNAME:-root}
      MYSQL_PASSWORD: ${DB_PASSWORD:-root}
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - app-network

  # Cache Redis
  redis:
    image: redis:7.2-alpine
    container_name: yagaruete_camp_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - app-network

  # phpMyAdmin para gestión de BD
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: yagaruete_camp_phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      PMA_USER: ${DB_USERNAME:-root}
      PMA_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
    networks:
      - app-network
    depends_on:
      - db

  # Mailhog para testing de emails
  mailhog:
    image: mailhog/mailhog
    container_name: yagaruete_camp_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app-network

  # Node.js para assets y herramientas frontend
  node:
    image: node:18-alpine
    container_name: yagaruete_camp_node
    working_dir: /app
    volumes:
      - ./:/app
    command: sh -c "npm install && npm run watch"
    networks:
      - app-network

# Volumes persistentes
volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local

# Red interna
networks:
  app-network:
    driver: bridge
